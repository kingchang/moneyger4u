SET SESSION FOREIGN_KEY_CHECKS=0;


/* Create Tables */

CREATE TABLE DAILY_OUTCOME
(
	DAILY_OUTCOME_ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	OUTCOME_DATE DATE NOT NULL,
	DAILY_OUTCOME_CATEGORY_ID INT(3) UNSIGNED NOT NULL,
	OUTCOME_NAME VARCHAR(100) NOT NULL,
	AMOUNT INT UNSIGNED NOT NULL,
	PAYMENT VARCHAR(10) NOT NULL,
	IS_WASTE BOOLEAN NOT NULL,
	REMARKS VARCHAR(256),
	USER_ID INT NOT NULL,
	CREATETED_AT TIMESTAMP NOT NULL,
	UPDATED_AT TIMESTAMP NOT NULL,
	VERSION INT UNSIGNED NOT NULL,
	UPDATED_BY INT NOT NULL,
	PRIMARY KEY (DAILY_OUTCOME_ID)
) ENGINE = InnoDB;


CREATE TABLE DAILY_OUTCOME_CATEGORY
(
	DAILY_OUTCOME_CATEGORY_ID INT(3) UNSIGNED NOT NULL AUTO_INCREMENT,
	CATEGORY_NAME VARCHAR(30) NOT NULL,
	PARENT_OUTCOME_CATEGORY_ID INT(3) UNSIGNED NOT NULL,
	CREATETED_AT TIMESTAMP NOT NULL,
	UPDATED_AT TIMESTAMP NOT NULL,
	VERSION INT UNSIGNED DEFAULT 0 NOT NULL,
	PRIMARY KEY (DAILY_OUTCOME_CATEGORY_ID),
	CONSTRAINT id_name UNIQUE (DAILY_OUTCOME_CATEGORY_ID, CATEGORY_NAME)
) ENGINE = InnoDB;


CREATE TABLE FAMILY
(
	FAMILY_ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	FAMILY_NAME VARCHAR(10) NOT NULL,
	CREATETED_AT TIMESTAMP NOT NULL,
	UPDATED_AT TIMESTAMP NOT NULL,
	VERSION INT UNSIGNED NOT NULL,
	PRIMARY KEY (FAMILY_ID)
) ENGINE = InnoDB;


CREATE TABLE INCOME
(
	INCOME_ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	INCOME_CATEGORY_ID INT(3) UNSIGNED NOT NULL,
	INCOME_NAME VARCHAR(50) NOT NULL,
	AMOUNT INT UNSIGNED NOT NULL,
	INCOME_DATE DATE NOT NULL,
	CREATETED_AT TIMESTAMP NOT NULL,
	UPDATED_AT TIMESTAMP NOT NULL,
	VERSION INT UNSIGNED NOT NULL,
	FAMILY_ID INT UNSIGNED NOT NULL,
	PRIMARY KEY (INCOME_ID)
) ENGINE = InnoDB;


CREATE TABLE INCOME_CATEGORY
(
	INCOME_CATEGORY_ID INT(3) UNSIGNED NOT NULL AUTO_INCREMENT,
	CATEGORY_NAME VARCHAR(30) NOT NULL UNIQUE,
	CREATETED_AT TIMESTAMP NOT NULL,
	UPDATED_AT TIMESTAMP NOT NULL,
	VERSION INT UNSIGNED DEFAULT 0 NOT NULL,
	PRIMARY KEY (INCOME_CATEGORY_ID)
) ENGINE = InnoDB;


CREATE TABLE MONTHLY_OUTCOME
(
	MONTHLY_OUTCOME_ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	OUTCOME_DATE DATE NOT NULL,
	MONTHLY_OUTCOME_CATEGORY_ID INT(3) UNSIGNED NOT NULL,
	OUTCOME_NAME VARCHAR(100),
	AMOUNT INT UNSIGNED NOT NULL,
	QUANTITY DECIMAL(5,3) UNSIGNED,
	REMARKS VARCHAR(256),
	FAMILY_ID INT UNSIGNED NOT NULL,
	CREATETED_AT TIMESTAMP NOT NULL,
	UPDATED_AT TIMESTAMP NOT NULL,
	VERSION INT UNSIGNED DEFAULT 0 NOT NULL,
	UPDATED_BY INT NOT NULL,
	PRIMARY KEY (MONTHLY_OUTCOME_ID)
) ENGINE = InnoDB;


CREATE TABLE MONTHLY_OUTCOME_CATEGORY
(
	MONTHLY_OUTCOME_CATEGORY_ID INT(3) UNSIGNED NOT NULL AUTO_INCREMENT,
	CATEGORY_NAME VARCHAR(30) NOT NULL,
	UNIT_NAME VARCHAR(10),
	CREATETED_AT TIMESTAMP NOT NULL,
	UPDATED_AT TIMESTAMP NOT NULL,
	VERSION INT UNSIGNED DEFAULT 0 NOT NULL,
	PRIMARY KEY (MONTHLY_OUTCOME_CATEGORY_ID)
) ENGINE = InnoDB;


CREATE TABLE PARENT_OUTCOME_CATEGORY
(
	PARENT_OUTCOME_CATEGORY_ID INT(3) UNSIGNED NOT NULL AUTO_INCREMENT,
	CATEGORY_NAME VARCHAR(30) NOT NULL UNIQUE,
	CREATETED_AT TIMESTAMP NOT NULL,
	UPDATED_AT TIMESTAMP NOT NULL,
	VERSION INT UNSIGNED DEFAULT 0 NOT NULL,
	PRIMARY KEY (PARENT_OUTCOME_CATEGORY_ID)
) ENGINE = InnoDB;


CREATE TABLE ROLE
(
	ROLE_NAME VARCHAR(10) NOT NULL,
	CREATETED_AT TIMESTAMP NOT NULL,
	UPDATED_AT TIMESTAMP NOT NULL,
	VERSION INT UNSIGNED NOT NULL,
	PRIMARY KEY (ROLE_NAME)
) ENGINE = InnoDB;


CREATE TABLE USER
(
	USER_ID INT NOT NULL AUTO_INCREMENT,
	FIRST_NAME VARCHAR(30) NOT NULL,
	LAST_NAME VARCHAR(30) NOT NULL,
	EMAIL VARCHAR(50) NOT NULL,
	PASSWORD VARCHAR(128) NOT NULL,
	CREATETED_AT TIMESTAMP NOT NULL,
	UPDATED_AT TIMESTAMP NOT NULL,
	VERSION INT UNSIGNED NOT NULL,
	FAMILY_ID INT UNSIGNED NOT NULL,
	PRIMARY KEY (USER_ID)
) ENGINE = InnoDB;


CREATE TABLE USER_ROLE
(
	USER_ID INT NOT NULL,
	ROLE_NAME VARCHAR(10) NOT NULL
) ENGINE = InnoDB;



/* Create Foreign Keys */

ALTER TABLE DAILY_OUTCOME
	ADD FOREIGN KEY (DAILY_OUTCOME_CATEGORY_ID)
	REFERENCES DAILY_OUTCOME_CATEGORY (DAILY_OUTCOME_CATEGORY_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE INCOME
	ADD FOREIGN KEY (FAMILY_ID)
	REFERENCES FAMILY (FAMILY_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONTHLY_OUTCOME
	ADD FOREIGN KEY (FAMILY_ID)
	REFERENCES FAMILY (FAMILY_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE USER
	ADD FOREIGN KEY (FAMILY_ID)
	REFERENCES FAMILY (FAMILY_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE INCOME
	ADD FOREIGN KEY (INCOME_CATEGORY_ID)
	REFERENCES INCOME_CATEGORY (INCOME_CATEGORY_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONTHLY_OUTCOME
	ADD FOREIGN KEY (MONTHLY_OUTCOME_CATEGORY_ID)
	REFERENCES MONTHLY_OUTCOME_CATEGORY (MONTHLY_OUTCOME_CATEGORY_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DAILY_OUTCOME_CATEGORY
	ADD FOREIGN KEY (PARENT_OUTCOME_CATEGORY_ID)
	REFERENCES PARENT_OUTCOME_CATEGORY (PARENT_OUTCOME_CATEGORY_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE USER_ROLE
	ADD FOREIGN KEY (ROLE_NAME)
	REFERENCES ROLE (ROLE_NAME)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DAILY_OUTCOME
	ADD FOREIGN KEY (UPDATED_BY)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DAILY_OUTCOME
	ADD FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MONTHLY_OUTCOME
	ADD FOREIGN KEY (UPDATED_BY)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE USER_ROLE
	ADD FOREIGN KEY (USER_ID)
	REFERENCES USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



